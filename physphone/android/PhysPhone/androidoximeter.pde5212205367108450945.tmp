/**
 * <p>Ketai Sensor Library for Android: http://KetaiProject.org</p>
 *
 * <p>Ketai Camera Features:
 * <ul>
 * <li>Interface for built-in camera</li>
 * <li>TODO: fix HACK of camera registration that currently exceptions in setup() at the moment.</li>
 * </ul>
 * <p>Updated: 2012-10-21 Daniel Sauter/j.duran</p>
 */

import ketai.camera.*;
PImage buffer;
KetaiCamera cam;
boolean camConfigSet=false;
int startTime;
int lastAq=0;
float total=0;
float count=0;
boolean lightstatus=true;
import android.view.WindowManager;
import android.view.View;
import android.os.Bundle;
import cassette.audiofiles.SoundFile;
 
SoundFile highbeep;
SoundFile lowbeep;
int totalRounds=0;
void onCreate(Bundle bundle) 
{
  super.onCreate(bundle);
  // fix so screen doesn't go to sleep when app is active
  getActivity().getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
}

void setup() {
  orientation(LANDSCAPE);
  size(800,600);
   
   highbeep = new SoundFile(this, "highbeep.mp3");
   lowbeep = new SoundFile(this, "lowbeep.mp3");
  
  imageMode(CENTER);
  textSize(45);
  cam = new KetaiCamera(this, 640, 480, 24);
  cam.enableFlash();
  cam.start();
  startTime=millis();
 
  
}

void draw() {
  /*
   try {
   highbeep.play();
   }
   catch (Exception e) {
   }*/
  if(cam != null && cam.isStarted() && lightstatus) {
    image(cam, width/2, height/2, width*2, height*2);
    if (millis() > startTime+5000 && !camConfigSet){
      camConfigSet=true;
      cam.manualSettings();
}

buffer=cam.get();
buffer.loadPixels();
buffer.updatePixels();for (int i=0; i< 640*480; i++) {
  total=total+red(buffer.pixels[i]);
  count=count+1;
}
//print(total/count);
if (millis() - lastAq >= 250) {
  totalRounds++;
  int trigger=0;
  if (totalRounds == 40) {
    totalRounds=0;
    int stimulus=random(10)+1;
    if (stimulus > 8) {
      trigger=2;
    }
    else {
      trigger=1;
    }
  }
  
  lastAq=millis();
  loadStrings("http://biostream-1024.appspot.com/sendStream?streamname=1&rawdata="+(total/count)+"&time="+trigger);
  total=0;
  count=0;
  
}

}
  else
    {
      background(128);
      text("Waiting for camera....touch to activate", 100, height/2);
    }
    
    
}

void onCameraPreviewEvent()
{
  cam.read();
}


void mousePressed() {
  if(cam == null)
    return;
    if (lightstatus) {
      cam.disableFlash();
    }
    else {
      cam.enableFlash();
    }
    lightstatus=!lightstatus;
   
  
}